name: Briefcase Build

on:
  push:
    branches:
      - main
    tags:
      - 'v.*'
  workflow_dispatch:

jobs:
  briefcase:
    name: Bundle on ${{ matrix.platform }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        #platform: [ubuntu-latest, windows-latest, macos-latest]
        platform: [windows-latest, ubuntu-22.04]
        python-version: ["3.10"]
      fail-fast: false
    defaults:
      run:
        shell: bash
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python libs
        run: |
          python -m pip install --upgrade pip
          python -m pip install briefcase

      - name: Install Linux build dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcairo2-dev libgirepository1.0-dev

      - name: Create and Build Bundle
        run: |
          briefcase create
          briefcase build

      - name: Package Mac
        if: runner.os == 'macOS'
        run: briefcase package --adhoc-sign

      - name: Package Windows / Linux
        if: runner.os == 'Windows' || runner.os == 'Linux'
        run: briefcase package

      - name: Upload Artifact for Linux
        uses: actions/upload-artifact@v4
        if: runner.os == 'Linux'
        with:
          name: filemonitor-${{ github.ref_name }}-${{ matrix.platform }}.deb
          path: '**/*.AppImage'

      - name: Upload Artifact for MacOS
        uses: actions/upload-artifact@v4
        if: runner.os == 'MacOS'
        with:
          name: filemonitor-${{ github.ref_name }}-${{ matrix.platform }}.dmg
          path: '**/*.dmg'

      - name: Upload Artifact for Windows
        uses: actions/upload-artifact@v4
        if: runner.os == 'Windows'
        with:
          name: filemonitor-${{ github.ref_name }}-${{ matrix.platform }}.msi
          path: '**/*.msi'

      - name: Release nightly Windows
        uses: softprops/action-gh-release@v2
        if: runner.os == 'Windows'
        with:
          prerelease: true
          name: nightly
          tag_name: nightly
          files: '**/*.msi'
          fail_on_unmatched_files: true

      - name: Release nightly Linux
        uses: softprops/action-gh-release@v2
        if: runner.os == 'Linux'
        with:
          prerelease: true
          name: nightly
          tag_name: nightly
          files: '**/*.deb'
          fail_on_unmatched_files: true

      - name: Release nightly Linux
        uses: softprops/action-gh-release@v2
        if: contains(github.ref, 'tags') && runner.os == 'Linux'
        with:
          prerelease: true
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: '**/*.deb'
          fail_on_unmatched_files: true
          
      - name: Release nightly Windows
        uses: softprops/action-gh-release@v2
        if: contains(github.ref, 'tags') && runner.os == 'Windows'
        with:
          prerelease: true
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: '**/*.msi'
          fail_on_unmatched_files: true

      
